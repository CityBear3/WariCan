// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: wallet.sql

package dao

import (
	"context"

	"github.com/google/uuid"
)

const getWalletByUserID = `-- name: GetWalletByUserID :one
SELECT id,
       user_id,
       balance,
       created_at,
       updated_at
FROM wallet
WHERE user_id = $1
`

// :param userID uuid
func (q *Queries) GetWalletByUserID(ctx context.Context, userID uuid.UUID) (Wallet, error) {
	row := q.db.QueryRowContext(ctx, getWalletByUserID, userID)
	var i Wallet
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Balance,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateWalletBalance = `-- name: UpdateWalletBalance :exec
UPDATE wallet
SET balance = $2
WHERE user_id = $1
RETURNING id, user_id, balance, created_at, updated_at
`

type UpdateWalletBalanceParams struct {
	UserID  uuid.UUID `json:"user_id"`
	Balance string    `json:"balance"`
}

// :param userID uuid
// :param balance decimal
func (q *Queries) UpdateWalletBalance(ctx context.Context, arg UpdateWalletBalanceParams) error {
	_, err := q.db.ExecContext(ctx, updateWalletBalance, arg.UserID, arg.Balance)
	return err
}
