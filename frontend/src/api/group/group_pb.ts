// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file group/group.proto (package warican.api.group, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { UserModel } from "../common/user_pb.js";
import { SplitBillingModel } from "../common/split-billing_pb.js";

/**
 * @generated from message warican.api.group.GroupCreateV1
 */
export class GroupCreateV1 extends Message<GroupCreateV1> {
  constructor(data?: PartialMessage<GroupCreateV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "warican.api.group.GroupCreateV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupCreateV1 {
    return new GroupCreateV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupCreateV1 {
    return new GroupCreateV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupCreateV1 {
    return new GroupCreateV1().fromJsonString(jsonString, options);
  }

  static equals(a: GroupCreateV1 | PlainMessage<GroupCreateV1> | undefined, b: GroupCreateV1 | PlainMessage<GroupCreateV1> | undefined): boolean {
    return proto3.util.equals(GroupCreateV1, a, b);
  }
}

/**
 * @generated from message warican.api.group.GroupCreateV1.Request
 */
export class GroupCreateV1_Request extends Message<GroupCreateV1_Request> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: repeated warican.api.group.GroupCreateV1.Member members = 3;
   */
  members: GroupCreateV1_Member[] = [];

  constructor(data?: PartialMessage<GroupCreateV1_Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "warican.api.group.GroupCreateV1.Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "members", kind: "message", T: GroupCreateV1_Member, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupCreateV1_Request {
    return new GroupCreateV1_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupCreateV1_Request {
    return new GroupCreateV1_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupCreateV1_Request {
    return new GroupCreateV1_Request().fromJsonString(jsonString, options);
  }

  static equals(a: GroupCreateV1_Request | PlainMessage<GroupCreateV1_Request> | undefined, b: GroupCreateV1_Request | PlainMessage<GroupCreateV1_Request> | undefined): boolean {
    return proto3.util.equals(GroupCreateV1_Request, a, b);
  }
}

/**
 * @generated from message warican.api.group.GroupCreateV1.Response
 */
export class GroupCreateV1_Response extends Message<GroupCreateV1_Response> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: repeated common.UserModel members = 4;
   */
  members: UserModel[] = [];

  constructor(data?: PartialMessage<GroupCreateV1_Response>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "warican.api.group.GroupCreateV1.Response";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "members", kind: "message", T: UserModel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupCreateV1_Response {
    return new GroupCreateV1_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupCreateV1_Response {
    return new GroupCreateV1_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupCreateV1_Response {
    return new GroupCreateV1_Response().fromJsonString(jsonString, options);
  }

  static equals(a: GroupCreateV1_Response | PlainMessage<GroupCreateV1_Response> | undefined, b: GroupCreateV1_Response | PlainMessage<GroupCreateV1_Response> | undefined): boolean {
    return proto3.util.equals(GroupCreateV1_Response, a, b);
  }
}

/**
 * @generated from message warican.api.group.GroupCreateV1.Member
 */
export class GroupCreateV1_Member extends Message<GroupCreateV1_Member> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<GroupCreateV1_Member>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "warican.api.group.GroupCreateV1.Member";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupCreateV1_Member {
    return new GroupCreateV1_Member().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupCreateV1_Member {
    return new GroupCreateV1_Member().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupCreateV1_Member {
    return new GroupCreateV1_Member().fromJsonString(jsonString, options);
  }

  static equals(a: GroupCreateV1_Member | PlainMessage<GroupCreateV1_Member> | undefined, b: GroupCreateV1_Member | PlainMessage<GroupCreateV1_Member> | undefined): boolean {
    return proto3.util.equals(GroupCreateV1_Member, a, b);
  }
}

/**
 * @generated from message warican.api.group.GroupGetV1
 */
export class GroupGetV1 extends Message<GroupGetV1> {
  constructor(data?: PartialMessage<GroupGetV1>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "warican.api.group.GroupGetV1";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupGetV1 {
    return new GroupGetV1().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupGetV1 {
    return new GroupGetV1().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupGetV1 {
    return new GroupGetV1().fromJsonString(jsonString, options);
  }

  static equals(a: GroupGetV1 | PlainMessage<GroupGetV1> | undefined, b: GroupGetV1 | PlainMessage<GroupGetV1> | undefined): boolean {
    return proto3.util.equals(GroupGetV1, a, b);
  }
}

/**
 * @generated from message warican.api.group.GroupGetV1.Request
 */
export class GroupGetV1_Request extends Message<GroupGetV1_Request> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId = "";

  constructor(data?: PartialMessage<GroupGetV1_Request>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "warican.api.group.GroupGetV1.Request";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupGetV1_Request {
    return new GroupGetV1_Request().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupGetV1_Request {
    return new GroupGetV1_Request().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupGetV1_Request {
    return new GroupGetV1_Request().fromJsonString(jsonString, options);
  }

  static equals(a: GroupGetV1_Request | PlainMessage<GroupGetV1_Request> | undefined, b: GroupGetV1_Request | PlainMessage<GroupGetV1_Request> | undefined): boolean {
    return proto3.util.equals(GroupGetV1_Request, a, b);
  }
}

/**
 * @generated from message warican.api.group.GroupGetV1.Response
 */
export class GroupGetV1_Response extends Message<GroupGetV1_Response> {
  /**
   * @generated from field: string group_id = 1;
   */
  groupId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: repeated warican.api.group.GroupGetV1.Member members = 4;
   */
  members: GroupGetV1_Member[] = [];

  /**
   * @generated from field: repeated common.SplitBillingModel split_billings = 5;
   */
  splitBillings: SplitBillingModel[] = [];

  constructor(data?: PartialMessage<GroupGetV1_Response>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "warican.api.group.GroupGetV1.Response";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "group_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "members", kind: "message", T: GroupGetV1_Member, repeated: true },
    { no: 5, name: "split_billings", kind: "message", T: SplitBillingModel, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupGetV1_Response {
    return new GroupGetV1_Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupGetV1_Response {
    return new GroupGetV1_Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupGetV1_Response {
    return new GroupGetV1_Response().fromJsonString(jsonString, options);
  }

  static equals(a: GroupGetV1_Response | PlainMessage<GroupGetV1_Response> | undefined, b: GroupGetV1_Response | PlainMessage<GroupGetV1_Response> | undefined): boolean {
    return proto3.util.equals(GroupGetV1_Response, a, b);
  }
}

/**
 * @generated from message warican.api.group.GroupGetV1.Member
 */
export class GroupGetV1_Member extends Message<GroupGetV1_Member> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId = "";

  constructor(data?: PartialMessage<GroupGetV1_Member>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "warican.api.group.GroupGetV1.Member";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GroupGetV1_Member {
    return new GroupGetV1_Member().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GroupGetV1_Member {
    return new GroupGetV1_Member().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GroupGetV1_Member {
    return new GroupGetV1_Member().fromJsonString(jsonString, options);
  }

  static equals(a: GroupGetV1_Member | PlainMessage<GroupGetV1_Member> | undefined, b: GroupGetV1_Member | PlainMessage<GroupGetV1_Member> | undefined): boolean {
    return proto3.util.equals(GroupGetV1_Member, a, b);
  }
}

